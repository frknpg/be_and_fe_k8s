---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
        - name: api
          image: visiumpoc/backendpoc:v0.0.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8088
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "400Mi"
              cpu: "128m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: api-env-config
          env:
            - name: CUSTOM_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vmanage-secret
                  key: dbpassword
            - name: VMANAGE_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: vmanage-secret
                  key: accessKeyId
            - name: VMANAGE_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: vmanage-secret
                  key: secretAccessKey
          command: ["/bin/bash"]
          args:
            [
              "-c",
              "java -XX:+UnlockExperimentalVMOptions -Xmx700m -XX:+UseContainerSupport -Djavax.net.ssl.trustStore=/home/trustStore -Djavax.net.ssl.trustStorePassword=changeit -Djava.security.egd=file:/dev/./urandom -jar /app/spring-boot-application.jar",
            ]
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/bin/sh", "-c", "keytool -import -noprompt -alias uat -file /home/uat.cer -cacerts -storepass changeit"]
          volumeMounts:
            - name: java-truststore
              mountPath: "/home"
              readOnly: true
      volumes:
        - name: java-truststore
          secret:
            secretName: trusted-store

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: api-env-config
data:
  SPRING_PROFILES_ACTIVE: prod
  CUSTOM_DATABASE_URL: jdbc:sqlserver://10.254.186.52:1433;databaseName=vmanage;currentSchema=vis
  CUSTOM_DATABASE_USERNAME: sa
  VMANAGE_BUCKET: attachment-storage
  VMANAGE_S3_ENDPOINT: https://10.254.186.59:9001/
  ELASTIC_URL: http://elasticsearch.app.visiumshift
  ELASTIC_KIBANA_URL: http://kibana.app.visiumshift

---
apiVersion: v1
kind: Secret
metadata:
  name: vmanage-secret
data:
  dbpassword: QWRtaW4xMjMh
  accessKeyId: bWluaW9hZG1pbg==
  secretAccessKey: QWRtaW4xMjMh

---
apiVersion: v1
kind: Service
metadata:
  name: api-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: api
  ports:
    - port: 8088
      protocol: TCP
      targetPort: 8088
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: client
  template:
    metadata:
      labels:
        component: client
    spec:
      containers:
        - name: client
          image: visiumpoc/frontendpoc:v0.0.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "100Mi"
              cpu: "128m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: nginx-default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
      volumes:
      - name: nginx-default-conf
        configMap:
          name: nginx-config-map
          items:
            - key: default.conf
              path: default.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-map
data:
  default.conf: |
    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/log/host.access.log  main;
    
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300; 

        location / {
            root   /usr/share/nginx/html;
            if (!-e $request_filename){
            rewrite ^(.*)$ /index.html break;
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }


---
apiVersion: v1
kind: Service
metadata:
  name: client-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: client
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: vmanage.apps.visiumshift
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: client-cluster-ip-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api-cluster-ip-service
                port:
                  number: 8088
status:
  loadBalancer:
    ingress:
      - {}